|schematic
MC1Power <= <VCC>
MC0Power <= <VCC>
SCL0 <= i2c_master:inst1.SCL
clk50 => pll:inst.inclk0
SDA0 <> i2c_master:inst1.SDA0
SDA1 <> i2c_master:inst1.SDA1
SCL1 <= i2c_master:inst1.SCL
Sensor0Power <= <VCC>
Sensor1Power <= <VCC>
direction[0] <= carDriver:inst5.direction[0]
direction[1] <= carDriver:inst5.direction[1]
direction[2] <= carDriver:inst5.direction[2]
direction[3] <= carDriver:inst5.direction[3]
direction[4] <= carDriver:inst5.direction[4]
direction[5] <= carDriver:inst5.direction[5]
direction[6] <= carDriver:inst5.direction[6]
direction[7] <= carDriver:inst5.direction[7]
led[0] <= colorBox:inst3.output[0]
led[1] <= colorBox:inst3.output[1]
led[2] <= colorBox:inst3.output[2]
led[3] <= colorBox:inst3.output[3]
led[4] <= colorBox:inst3.output[4]
led[5] <= colorBox:inst3.output[5]
led[6] <= colorBox:inst3.output[6]
led[7] <= colorBox:inst3.output[7]
PMW[0] <= carDriver:inst5.pmw[0]
PMW[1] <= carDriver:inst5.pmw[1]
PMW[2] <= carDriver:inst5.pmw[2]
PMW[3] <= carDriver:inst5.pmw[3]


|schematic|i2c_master:inst1
clk50 => wr_Reg.CLK
clk50 => data_clk.CLK
clk50 => i2c_clk.CLK
clk50 => count[0].CLK
clk50 => count[1].CLK
clk50 => count[2].CLK
clk50 => count[3].CLK
clk50 => count[4].CLK
clk50 => count[5].CLK
clk50 => count[6].CLK
clk50 => output1[0]~reg0.CLK
clk50 => output1[1]~reg0.CLK
clk50 => output1[2]~reg0.CLK
clk50 => output1[3]~reg0.CLK
clk50 => output1[4]~reg0.CLK
clk50 => output1[5]~reg0.CLK
clk50 => output1[6]~reg0.CLK
clk50 => output1[7]~reg0.CLK
clk50 => output0[0]~reg0.CLK
clk50 => output0[1]~reg0.CLK
clk50 => output0[2]~reg0.CLK
clk50 => output0[3]~reg0.CLK
clk50 => output0[4]~reg0.CLK
clk50 => output0[5]~reg0.CLK
clk50 => output0[6]~reg0.CLK
clk50 => output0[7]~reg0.CLK
WR => process_2.IN0
WR => process_2.IN0
WR => wr_Reg.DATAIN
RD => process_2.IN1
RD => process_2.IN1
reset => jReg[0].ACLR
reset => jReg[1].ACLR
reset => jReg[2].ACLR
reset => jReg[3].ACLR
reset => iReg[0].ACLR
reset => iReg[1].ACLR
reset => iReg[2].ACLR
reset => iReg[3].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => prev_State~3.DATAIN
reset => i2c_clk.ENA
reset => data_clk.ENA
reRead[0] => Equal2.IN3
reRead[0] => Equal3.IN2
reRead[1] => Equal2.IN2
reRead[1] => Equal3.IN1
reRead[2] => Equal2.IN1
reRead[2] => Equal3.IN0
dIn[0] => Mux2.IN10
dIn[1] => Mux2.IN9
dIn[2] => Mux2.IN8
dIn[3] => Mux2.IN7
dIn[4] => Mux2.IN6
dIn[5] => Mux2.IN5
dIn[6] => Mux2.IN4
dIn[7] => Mux2.IN3
Reg_Addr[0] => Mux1.IN10
Reg_Addr[1] => Mux1.IN9
Reg_Addr[2] => Mux1.IN8
Reg_Addr[3] => Mux1.IN7
Reg_Addr[4] => Mux1.IN6
Reg_Addr[5] => Mux1.IN5
Reg_Addr[6] => Mux1.IN4
Reg_Addr[7] => Mux1.IN3
SCL <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
SDA0 <> SDA0
SDA1 <> SDA1
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE
statusBit <= statusBit~reg0.DB_MAX_OUTPUT_PORT_TYPE
flag <= Selector19.DB_MAX_OUTPUT_PORT_TYPE
output0[0] <= output0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[1] <= output0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[2] <= output0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[3] <= output0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[4] <= output0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[5] <= output0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[6] <= output0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[7] <= output0[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[0] <= output1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[1] <= output1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[2] <= output1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[3] <= output1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[4] <= output1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[5] <= output1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[6] <= output1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[7] <= output1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|schematic|pll:inst
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|schematic|pll:inst|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|schematic|pll:inst|altpll:altpll_component|pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|schematic|userInterface:inst2
clk50 => reRead[0]~reg0.CLK
clk50 => reRead[1]~reg0.CLK
clk50 => reRead[2]~reg0.CLK
clk50 => byteCounter[0].CLK
clk50 => byteCounter[1].CLK
clk50 => byteCounter[2].CLK
clk50 => byteCounter[3].CLK
clk50 => dout[0]~reg0.CLK
clk50 => dout[1]~reg0.CLK
clk50 => dout[2]~reg0.CLK
clk50 => dout[3]~reg0.CLK
clk50 => dout[4]~reg0.CLK
clk50 => dout[5]~reg0.CLK
clk50 => dout[6]~reg0.CLK
clk50 => dout[7]~reg0.CLK
clk50 => regOut[0]~reg0.CLK
clk50 => regOut[1]~reg0.CLK
clk50 => regOut[2]~reg0.CLK
clk50 => regOut[3]~reg0.CLK
clk50 => regOut[4]~reg0.CLK
clk50 => regOut[5]~reg0.CLK
clk50 => regOut[6]~reg0.CLK
clk50 => regOut[7]~reg0.CLK
clk50 => prev_State~1.DATAIN
busy => next_State.OUTPUTSELECT
busy => next_State.OUTPUTSELECT
busy => next_State.OUTPUTSELECT
busy => next_State.OUTPUTSELECT
busy => next_State.OUTPUTSELECT
busy => next_State.StartUp.DATAB
busy => next_State.Hold.DATAA
busy => Selector0.IN1
busy => Selector1.IN1
busy => Selector2.IN1
busy => Selector3.IN1
busy => Selector4.IN1
busy => Selector5.IN1
reset => prev_State~3.DATAIN
statusInput => next_State.OUTPUTSELECT
statusInput => next_State.OUTPUTSELECT
statusInput => next_State.DATAA
WR <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
RD <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[0] <= regOut[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[1] <= regOut[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[2] <= regOut[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[3] <= regOut[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[4] <= regOut[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[5] <= regOut[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[6] <= regOut[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
regOut[7] <= regOut[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reRead[0] <= reRead[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reRead[1] <= reRead[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reRead[2] <= reRead[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|schematic|carDriver:inst5
clk50 => counter1[0].CLK
clk50 => counter1[1].CLK
clk50 => counter1[2].CLK
clk50 => counter1[3].CLK
clk50 => counter1[4].CLK
clk50 => counter1[5].CLK
clk50 => counter1[6].CLK
clk50 => counter1[7].CLK
clk50 => counter1[8].CLK
clk50 => counter0[0].CLK
clk50 => counter0[1].CLK
clk50 => counter0[2].CLK
clk50 => counter0[3].CLK
clk50 => counter0[4].CLK
clk50 => counter0[5].CLK
clk50 => counter0[6].CLK
clk50 => counter0[7].CLK
clk50 => counter0[8].CLK
input0[0] => LessThan0.IN16
input0[1] => LessThan0.IN15
input0[2] => LessThan0.IN14
input0[3] => LessThan0.IN13
input0[4] => LessThan0.IN12
input0[5] => LessThan0.IN11
input0[6] => LessThan0.IN10
input0[7] => LessThan0.IN9
input1[0] => LessThan1.IN16
input1[1] => LessThan1.IN15
input1[2] => LessThan1.IN14
input1[3] => LessThan1.IN13
input1[4] => LessThan1.IN12
input1[5] => LessThan1.IN11
input1[6] => LessThan1.IN10
input1[7] => LessThan1.IN9
direction[0] <= <VCC>
direction[1] <= <GND>
direction[2] <= <VCC>
direction[3] <= <GND>
direction[4] <= <VCC>
direction[5] <= <GND>
direction[6] <= <VCC>
direction[7] <= <GND>
pmw[0] <= LessThan2.DB_MAX_OUTPUT_PORT_TYPE
pmw[1] <= LessThan2.DB_MAX_OUTPUT_PORT_TYPE
pmw[2] <= LessThan3.DB_MAX_OUTPUT_PORT_TYPE
pmw[3] <= LessThan3.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst3
clk50 => fp_division:div.clk50
clk50 => multiplicand[0].CLK
clk50 => multiplicand[1].CLK
clk50 => multiplicand[2].CLK
clk50 => multiplicand[3].CLK
clk50 => multiplicand[4].CLK
clk50 => multiplicand[5].CLK
clk50 => multiplicand[6].CLK
clk50 => multiplicand[7].CLK
clk50 => multiplicand[8].CLK
clk50 => multiplicand[9].CLK
clk50 => multiplicand[10].CLK
clk50 => multiplicand[11].CLK
clk50 => multiplicand[12].CLK
clk50 => multiplicand[13].CLK
clk50 => multiplicand[14].CLK
clk50 => multiplicand[15].CLK
clk50 => multiplicand[16].CLK
clk50 => multiplicand[17].CLK
clk50 => multiplicand[18].CLK
clk50 => multiplicand[19].CLK
clk50 => multiplicand[20].CLK
clk50 => multiplicand[21].CLK
clk50 => multiplicand[22].CLK
clk50 => multiplicand[23].CLK
clk50 => multiplicand[24].CLK
clk50 => multiplicand[25].CLK
clk50 => multiplicand[26].CLK
clk50 => multiplicand[27].CLK
clk50 => multiplicand[28].CLK
clk50 => multiplicand[29].CLK
clk50 => multiplicand[30].CLK
clk50 => multiplicand[31].CLK
clk50 => iReg[0].CLK
clk50 => iReg[1].CLK
clk50 => iReg[2].CLK
clk50 => state~1.DATAIN
clk50 => inputNumber[1][0].CLK
clk50 => inputNumber[1][1].CLK
clk50 => inputNumber[1][2].CLK
clk50 => inputNumber[1][3].CLK
clk50 => inputNumber[1][4].CLK
clk50 => inputNumber[1][5].CLK
clk50 => inputNumber[1][6].CLK
clk50 => inputNumber[1][7].CLK
clk50 => inputNumber[2][0].CLK
clk50 => inputNumber[2][1].CLK
clk50 => inputNumber[2][2].CLK
clk50 => inputNumber[2][3].CLK
clk50 => inputNumber[2][4].CLK
clk50 => inputNumber[2][5].CLK
clk50 => inputNumber[2][6].CLK
clk50 => inputNumber[2][7].CLK
clk50 => inputNumber[3][0].CLK
clk50 => inputNumber[3][1].CLK
clk50 => inputNumber[3][2].CLK
clk50 => inputNumber[3][3].CLK
clk50 => inputNumber[3][4].CLK
clk50 => inputNumber[3][5].CLK
clk50 => inputNumber[3][6].CLK
clk50 => inputNumber[3][7].CLK
clk50 => inputNumber[4][0].CLK
clk50 => inputNumber[4][1].CLK
clk50 => inputNumber[4][2].CLK
clk50 => inputNumber[4][3].CLK
clk50 => inputNumber[4][4].CLK
clk50 => inputNumber[4][5].CLK
clk50 => inputNumber[4][6].CLK
clk50 => inputNumber[4][7].CLK
clk50 => ffAccept[0].CLK
clk50 => ffAccept[1].CLK
clk50 => ffAllow[0].CLK
clk50 => ffAllow[1].CLK
accept => Selector5.IN3
accept => ffAccept[0].DATAIN
accept => Selector3.IN3
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
output[0] <= fp_to_binary:fp2b.output[0]
output[1] <= fp_to_binary:fp2b.output[1]
output[2] <= fp_to_binary:fp2b.output[2]
output[3] <= fp_to_binary:fp2b.output[3]
output[4] <= fp_to_binary:fp2b.output[4]
output[5] <= fp_to_binary:fp2b.output[5]
output[6] <= fp_to_binary:fp2b.output[6]
output[7] <= fp_to_binary:fp2b.output[7]


|schematic|colorBox:inst3|binary_to_fp:b2f0
inputInteger[0] => exponent_encoder.IN1
inputInteger[0] => significand_generator:sgn.inputInteger[0]
inputInteger[0] => Equal0.IN15
inputInteger[1] => exponent_encoder.IN1
inputInteger[1] => significand_generator:sgn.inputInteger[1]
inputInteger[1] => Equal0.IN14
inputInteger[2] => exponent_encoder.IN1
inputInteger[2] => significand_generator:sgn.inputInteger[2]
inputInteger[2] => Equal0.IN13
inputInteger[3] => exponent_encoder.IN1
inputInteger[3] => significand_generator:sgn.inputInteger[3]
inputInteger[3] => Equal0.IN12
inputInteger[4] => exponent_encoder.IN1
inputInteger[4] => significand_generator:sgn.inputInteger[4]
inputInteger[4] => Equal0.IN11
inputInteger[5] => exponent_encoder.IN1
inputInteger[5] => significand_generator:sgn.inputInteger[5]
inputInteger[5] => Equal0.IN10
inputInteger[6] => exponent_encoder.IN1
inputInteger[6] => significand_generator:sgn.inputInteger[6]
inputInteger[6] => Equal0.IN9
inputInteger[7] => exponent_encoder.IN1
inputInteger[7] => significand_generator:sgn.inputInteger[7]
inputInteger[7] => Equal0.IN8
inputInteger[8] => exponent_encoder.IN1
inputInteger[8] => significand_generator:sgn.inputInteger[8]
inputInteger[8] => Equal0.IN7
inputInteger[9] => exponent_encoder.IN1
inputInteger[9] => significand_generator:sgn.inputInteger[9]
inputInteger[9] => Equal0.IN6
inputInteger[10] => exponent_encoder.IN1
inputInteger[10] => significand_generator:sgn.inputInteger[10]
inputInteger[10] => Equal0.IN5
inputInteger[11] => exponent_encoder.IN1
inputInteger[11] => significand_generator:sgn.inputInteger[11]
inputInteger[11] => Equal0.IN4
inputInteger[12] => exponent_encoder.IN1
inputInteger[12] => significand_generator:sgn.inputInteger[12]
inputInteger[12] => Equal0.IN3
inputInteger[13] => exponent_encoder.IN1
inputInteger[13] => significand_generator:sgn.inputInteger[13]
inputInteger[13] => Equal0.IN2
inputInteger[14] => exponent_encoder.IN0
inputInteger[14] => significand_generator:sgn.inputInteger[14]
inputInteger[14] => Equal0.IN1
inputInteger[15] => exponent_encoder.IN1
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => significand_generator:sgn.inputInteger[15]
inputInteger[15] => Equal0.IN0
inputInteger[15] => exponent_encoder.DATAB
output[0] <= significand_generator:sgn.significand[0]
output[1] <= significand_generator:sgn.significand[1]
output[2] <= significand_generator:sgn.significand[2]
output[3] <= significand_generator:sgn.significand[3]
output[4] <= significand_generator:sgn.significand[4]
output[5] <= significand_generator:sgn.significand[5]
output[6] <= significand_generator:sgn.significand[6]
output[7] <= significand_generator:sgn.significand[7]
output[8] <= significand_generator:sgn.significand[8]
output[9] <= significand_generator:sgn.significand[9]
output[10] <= significand_generator:sgn.significand[10]
output[11] <= significand_generator:sgn.significand[11]
output[12] <= significand_generator:sgn.significand[12]
output[13] <= significand_generator:sgn.significand[13]
output[14] <= significand_generator:sgn.significand[14]
output[15] <= significand_generator:sgn.significand[15]
output[16] <= significand_generator:sgn.significand[16]
output[17] <= significand_generator:sgn.significand[17]
output[18] <= significand_generator:sgn.significand[18]
output[19] <= significand_generator:sgn.significand[19]
output[20] <= significand_generator:sgn.significand[20]
output[21] <= significand_generator:sgn.significand[21]
output[22] <= significand_generator:sgn.significand[22]
output[23] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[24] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[25] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[26] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[27] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[28] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[29] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[30] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[31] <= <GND>


|schematic|colorBox:inst3|binary_to_fp:b2f0|significand_generator:sgn
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAB
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => Equal0.IN15
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAB
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => Equal0.IN14
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAB
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => Equal0.IN13
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAB
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => Equal0.IN12
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAB
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => Equal0.IN11
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAB
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => Equal0.IN10
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAB
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => Equal0.IN9
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAB
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => Equal0.IN8
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAB
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => Equal0.IN7
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAB
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => Equal0.IN6
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAB
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => Equal0.IN5
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAB
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAA
inputInteger[11] => Equal0.IN4
inputInteger[12] => process_0.DATAA
inputInteger[12] => process_0.DATAB
inputInteger[12] => process_0.DATAA
inputInteger[12] => Equal0.IN3
inputInteger[13] => process_0.DATAA
inputInteger[13] => process_0.DATAB
inputInteger[13] => Equal0.IN2
inputInteger[14] => process_0.DATAB
inputInteger[14] => Equal0.IN1
inputInteger[15] => Equal0.IN0
index[0] => Equal2.IN7
index[0] => Equal3.IN7
index[0] => Equal4.IN7
index[0] => Equal5.IN7
index[0] => Equal6.IN7
index[0] => Equal7.IN7
index[0] => Equal8.IN7
index[0] => Equal9.IN7
index[0] => Equal10.IN7
index[0] => Equal11.IN7
index[0] => Equal12.IN7
index[0] => Equal13.IN7
index[0] => Equal14.IN7
index[0] => Equal15.IN7
index[0] => Equal16.IN7
index[0] => Equal1.IN3
index[1] => Equal2.IN6
index[1] => Equal3.IN6
index[1] => Equal4.IN6
index[1] => Equal5.IN6
index[1] => Equal6.IN6
index[1] => Equal7.IN6
index[1] => Equal8.IN6
index[1] => Equal9.IN6
index[1] => Equal10.IN6
index[1] => Equal11.IN6
index[1] => Equal12.IN6
index[1] => Equal13.IN6
index[1] => Equal14.IN6
index[1] => Equal15.IN6
index[1] => Equal16.IN6
index[1] => Equal1.IN2
index[2] => Equal2.IN5
index[2] => Equal3.IN5
index[2] => Equal4.IN5
index[2] => Equal5.IN5
index[2] => Equal6.IN5
index[2] => Equal7.IN5
index[2] => Equal8.IN5
index[2] => Equal9.IN5
index[2] => Equal10.IN5
index[2] => Equal11.IN5
index[2] => Equal12.IN5
index[2] => Equal13.IN5
index[2] => Equal14.IN5
index[2] => Equal15.IN5
index[2] => Equal16.IN5
index[2] => Equal1.IN1
index[3] => Equal2.IN4
index[3] => Equal3.IN4
index[3] => Equal4.IN4
index[3] => Equal5.IN4
index[3] => Equal6.IN4
index[3] => Equal7.IN4
index[3] => Equal8.IN4
index[3] => Equal9.IN4
index[3] => Equal10.IN4
index[3] => Equal11.IN4
index[3] => Equal12.IN4
index[3] => Equal13.IN4
index[3] => Equal14.IN4
index[3] => Equal15.IN4
index[3] => Equal16.IN4
index[3] => Equal1.IN0
significand[0] <= <GND>
significand[1] <= <GND>
significand[2] <= <GND>
significand[3] <= <GND>
significand[4] <= <GND>
significand[5] <= <GND>
significand[6] <= <GND>
significand[7] <= <GND>
significand[8] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[9] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[10] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[11] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[12] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[13] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[14] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[15] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[16] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[17] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[18] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[19] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[20] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[21] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[22] <= significand.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst3|binary_to_fp:b2f1
inputInteger[0] => exponent_encoder.IN1
inputInteger[0] => significand_generator:sgn.inputInteger[0]
inputInteger[0] => Equal0.IN15
inputInteger[1] => exponent_encoder.IN1
inputInteger[1] => significand_generator:sgn.inputInteger[1]
inputInteger[1] => Equal0.IN14
inputInteger[2] => exponent_encoder.IN1
inputInteger[2] => significand_generator:sgn.inputInteger[2]
inputInteger[2] => Equal0.IN13
inputInteger[3] => exponent_encoder.IN1
inputInteger[3] => significand_generator:sgn.inputInteger[3]
inputInteger[3] => Equal0.IN12
inputInteger[4] => exponent_encoder.IN1
inputInteger[4] => significand_generator:sgn.inputInteger[4]
inputInteger[4] => Equal0.IN11
inputInteger[5] => exponent_encoder.IN1
inputInteger[5] => significand_generator:sgn.inputInteger[5]
inputInteger[5] => Equal0.IN10
inputInteger[6] => exponent_encoder.IN1
inputInteger[6] => significand_generator:sgn.inputInteger[6]
inputInteger[6] => Equal0.IN9
inputInteger[7] => exponent_encoder.IN1
inputInteger[7] => significand_generator:sgn.inputInteger[7]
inputInteger[7] => Equal0.IN8
inputInteger[8] => exponent_encoder.IN1
inputInteger[8] => significand_generator:sgn.inputInteger[8]
inputInteger[8] => Equal0.IN7
inputInteger[9] => exponent_encoder.IN1
inputInteger[9] => significand_generator:sgn.inputInteger[9]
inputInteger[9] => Equal0.IN6
inputInteger[10] => exponent_encoder.IN1
inputInteger[10] => significand_generator:sgn.inputInteger[10]
inputInteger[10] => Equal0.IN5
inputInteger[11] => exponent_encoder.IN1
inputInteger[11] => significand_generator:sgn.inputInteger[11]
inputInteger[11] => Equal0.IN4
inputInteger[12] => exponent_encoder.IN1
inputInteger[12] => significand_generator:sgn.inputInteger[12]
inputInteger[12] => Equal0.IN3
inputInteger[13] => exponent_encoder.IN1
inputInteger[13] => significand_generator:sgn.inputInteger[13]
inputInteger[13] => Equal0.IN2
inputInteger[14] => exponent_encoder.IN0
inputInteger[14] => significand_generator:sgn.inputInteger[14]
inputInteger[14] => Equal0.IN1
inputInteger[15] => exponent_encoder.IN1
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => significand_generator:sgn.inputInteger[15]
inputInteger[15] => Equal0.IN0
inputInteger[15] => exponent_encoder.DATAB
output[0] <= significand_generator:sgn.significand[0]
output[1] <= significand_generator:sgn.significand[1]
output[2] <= significand_generator:sgn.significand[2]
output[3] <= significand_generator:sgn.significand[3]
output[4] <= significand_generator:sgn.significand[4]
output[5] <= significand_generator:sgn.significand[5]
output[6] <= significand_generator:sgn.significand[6]
output[7] <= significand_generator:sgn.significand[7]
output[8] <= significand_generator:sgn.significand[8]
output[9] <= significand_generator:sgn.significand[9]
output[10] <= significand_generator:sgn.significand[10]
output[11] <= significand_generator:sgn.significand[11]
output[12] <= significand_generator:sgn.significand[12]
output[13] <= significand_generator:sgn.significand[13]
output[14] <= significand_generator:sgn.significand[14]
output[15] <= significand_generator:sgn.significand[15]
output[16] <= significand_generator:sgn.significand[16]
output[17] <= significand_generator:sgn.significand[17]
output[18] <= significand_generator:sgn.significand[18]
output[19] <= significand_generator:sgn.significand[19]
output[20] <= significand_generator:sgn.significand[20]
output[21] <= significand_generator:sgn.significand[21]
output[22] <= significand_generator:sgn.significand[22]
output[23] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[24] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[25] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[26] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[27] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[28] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[29] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[30] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[31] <= <GND>


|schematic|colorBox:inst3|binary_to_fp:b2f1|significand_generator:sgn
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAB
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => Equal0.IN15
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAB
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => Equal0.IN14
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAB
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => Equal0.IN13
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAB
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => Equal0.IN12
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAB
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => Equal0.IN11
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAB
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => Equal0.IN10
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAB
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => Equal0.IN9
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAB
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => Equal0.IN8
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAB
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => Equal0.IN7
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAB
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => Equal0.IN6
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAB
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => Equal0.IN5
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAB
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAA
inputInteger[11] => Equal0.IN4
inputInteger[12] => process_0.DATAA
inputInteger[12] => process_0.DATAB
inputInteger[12] => process_0.DATAA
inputInteger[12] => Equal0.IN3
inputInteger[13] => process_0.DATAA
inputInteger[13] => process_0.DATAB
inputInteger[13] => Equal0.IN2
inputInteger[14] => process_0.DATAB
inputInteger[14] => Equal0.IN1
inputInteger[15] => Equal0.IN0
index[0] => Equal2.IN7
index[0] => Equal3.IN7
index[0] => Equal4.IN7
index[0] => Equal5.IN7
index[0] => Equal6.IN7
index[0] => Equal7.IN7
index[0] => Equal8.IN7
index[0] => Equal9.IN7
index[0] => Equal10.IN7
index[0] => Equal11.IN7
index[0] => Equal12.IN7
index[0] => Equal13.IN7
index[0] => Equal14.IN7
index[0] => Equal15.IN7
index[0] => Equal16.IN7
index[0] => Equal1.IN3
index[1] => Equal2.IN6
index[1] => Equal3.IN6
index[1] => Equal4.IN6
index[1] => Equal5.IN6
index[1] => Equal6.IN6
index[1] => Equal7.IN6
index[1] => Equal8.IN6
index[1] => Equal9.IN6
index[1] => Equal10.IN6
index[1] => Equal11.IN6
index[1] => Equal12.IN6
index[1] => Equal13.IN6
index[1] => Equal14.IN6
index[1] => Equal15.IN6
index[1] => Equal16.IN6
index[1] => Equal1.IN2
index[2] => Equal2.IN5
index[2] => Equal3.IN5
index[2] => Equal4.IN5
index[2] => Equal5.IN5
index[2] => Equal6.IN5
index[2] => Equal7.IN5
index[2] => Equal8.IN5
index[2] => Equal9.IN5
index[2] => Equal10.IN5
index[2] => Equal11.IN5
index[2] => Equal12.IN5
index[2] => Equal13.IN5
index[2] => Equal14.IN5
index[2] => Equal15.IN5
index[2] => Equal16.IN5
index[2] => Equal1.IN1
index[3] => Equal2.IN4
index[3] => Equal3.IN4
index[3] => Equal4.IN4
index[3] => Equal5.IN4
index[3] => Equal6.IN4
index[3] => Equal7.IN4
index[3] => Equal8.IN4
index[3] => Equal9.IN4
index[3] => Equal10.IN4
index[3] => Equal11.IN4
index[3] => Equal12.IN4
index[3] => Equal13.IN4
index[3] => Equal14.IN4
index[3] => Equal15.IN4
index[3] => Equal16.IN4
index[3] => Equal1.IN0
significand[0] <= <GND>
significand[1] <= <GND>
significand[2] <= <GND>
significand[3] <= <GND>
significand[4] <= <GND>
significand[5] <= <GND>
significand[6] <= <GND>
significand[7] <= <GND>
significand[8] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[9] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[10] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[11] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[12] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[13] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[14] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[15] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[16] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[17] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[18] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[19] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[20] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[21] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[22] <= significand.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst3|fp_division:div
clk50 => iReg[0].CLK
clk50 => iReg[1].CLK
clk50 => iReg[2].CLK
clk50 => iReg[3].CLK
clk50 => iReg[4].CLK
clk50 => iReg[5].CLK
clk50 => iReg[6].CLK
clk50 => State~1.DATAIN
clk50 => quotient[0]~reg0.CLK
clk50 => quotient[1]~reg0.CLK
clk50 => quotient[2]~reg0.CLK
clk50 => quotient[3]~reg0.CLK
clk50 => quotient[4]~reg0.CLK
clk50 => quotient[5]~reg0.CLK
clk50 => quotient[6]~reg0.CLK
clk50 => quotient[7]~reg0.CLK
clk50 => quotient[8]~reg0.CLK
clk50 => quotient[9]~reg0.CLK
clk50 => quotient[10]~reg0.CLK
clk50 => quotient[11]~reg0.CLK
clk50 => quotient[12]~reg0.CLK
clk50 => quotient[13]~reg0.CLK
clk50 => quotient[14]~reg0.CLK
clk50 => quotient[15]~reg0.CLK
clk50 => quotient[16]~reg0.CLK
clk50 => quotient[17]~reg0.CLK
clk50 => quotient[18]~reg0.CLK
clk50 => quotient[19]~reg0.CLK
clk50 => quotient[20]~reg0.CLK
clk50 => quotient[21]~reg0.CLK
clk50 => quotient[22]~reg0.CLK
clk50 => quotient[23]~reg0.CLK
clk50 => quotient[24]~reg0.CLK
clk50 => quotient[25]~reg0.CLK
clk50 => quotient[26]~reg0.CLK
clk50 => quotient[27]~reg0.CLK
clk50 => quotient[28]~reg0.CLK
clk50 => quotient[29]~reg0.CLK
clk50 => quotient[30]~reg0.CLK
clk50 => quotient[31]~reg0.CLK
clk50 => bias.CLK
clk50 => decimalSpot[0].CLK
clk50 => decimalSpot[1].CLK
clk50 => decimalSpot[2].CLK
clk50 => decimalSpot[3].CLK
clk50 => decimalSpot[4].CLK
clk50 => quotientReg[0].CLK
clk50 => quotientReg[1].CLK
clk50 => quotientReg[2].CLK
clk50 => quotientReg[3].CLK
clk50 => quotientReg[4].CLK
clk50 => quotientReg[5].CLK
clk50 => quotientReg[6].CLK
clk50 => quotientReg[7].CLK
clk50 => quotientReg[8].CLK
clk50 => quotientReg[9].CLK
clk50 => quotientReg[10].CLK
clk50 => quotientReg[11].CLK
clk50 => quotientReg[12].CLK
clk50 => quotientReg[13].CLK
clk50 => quotientReg[14].CLK
clk50 => quotientReg[15].CLK
clk50 => quotientReg[16].CLK
clk50 => quotientReg[17].CLK
clk50 => quotientReg[18].CLK
clk50 => quotientReg[19].CLK
clk50 => quotientReg[20].CLK
clk50 => quotientReg[21].CLK
clk50 => quotientReg[22].CLK
clk50 => quotientReg[23].CLK
clk50 => quotientReg[24].CLK
clk50 => quotientReg[25].CLK
clk50 => quotientReg[26].CLK
clk50 => quotientReg[27].CLK
clk50 => quotientReg[28].CLK
clk50 => quotientReg[29].CLK
clk50 => quotientReg[30].CLK
clk50 => quotientReg[31].CLK
clk50 => qStream[0].CLK
clk50 => qStream[1].CLK
clk50 => qStream[2].CLK
clk50 => qStream[3].CLK
clk50 => qStream[4].CLK
clk50 => qStream[5].CLK
clk50 => qStream[6].CLK
clk50 => qStream[7].CLK
clk50 => qStream[8].CLK
clk50 => qStream[9].CLK
clk50 => qStream[10].CLK
clk50 => qStream[11].CLK
clk50 => qStream[12].CLK
clk50 => qStream[13].CLK
clk50 => qStream[14].CLK
clk50 => qStream[15].CLK
clk50 => qStream[16].CLK
clk50 => qStream[17].CLK
clk50 => qStream[18].CLK
clk50 => qStream[19].CLK
clk50 => qStream[20].CLK
clk50 => qStream[21].CLK
clk50 => qStream[22].CLK
clk50 => exponentDividend[0].CLK
clk50 => exponentDividend[1].CLK
clk50 => exponentDividend[2].CLK
clk50 => exponentDividend[3].CLK
clk50 => exponentDividend[4].CLK
clk50 => exponentDividend[5].CLK
clk50 => exponentDividend[6].CLK
clk50 => exponentDividend[7].CLK
clk50 => exponentDivisor[0].CLK
clk50 => exponentDivisor[1].CLK
clk50 => exponentDivisor[2].CLK
clk50 => exponentDivisor[3].CLK
clk50 => exponentDivisor[4].CLK
clk50 => exponentDivisor[5].CLK
clk50 => exponentDivisor[6].CLK
clk50 => exponentDivisor[7].CLK
clk50 => shiftReg[0].CLK
clk50 => shiftReg[1].CLK
clk50 => shiftReg[2].CLK
clk50 => shiftReg[3].CLK
clk50 => shiftReg[4].CLK
clk50 => shiftReg[5].CLK
clk50 => shiftReg[6].CLK
clk50 => shiftReg[7].CLK
clk50 => shiftReg[8].CLK
clk50 => shiftReg[9].CLK
clk50 => shiftReg[10].CLK
clk50 => shiftReg[11].CLK
clk50 => shiftReg[12].CLK
clk50 => shiftReg[13].CLK
clk50 => shiftReg[14].CLK
clk50 => shiftReg[15].CLK
clk50 => shiftReg[16].CLK
clk50 => shiftReg[17].CLK
clk50 => shiftReg[18].CLK
clk50 => shiftReg[19].CLK
clk50 => shiftReg[20].CLK
clk50 => shiftReg[21].CLK
clk50 => shiftReg[22].CLK
clk50 => shiftReg[23].CLK
clk50 => divisorReg[0].CLK
clk50 => divisorReg[1].CLK
clk50 => divisorReg[2].CLK
clk50 => divisorReg[3].CLK
clk50 => divisorReg[4].CLK
clk50 => divisorReg[5].CLK
clk50 => divisorReg[6].CLK
clk50 => divisorReg[7].CLK
clk50 => divisorReg[8].CLK
clk50 => divisorReg[9].CLK
clk50 => divisorReg[10].CLK
clk50 => divisorReg[11].CLK
clk50 => divisorReg[12].CLK
clk50 => divisorReg[13].CLK
clk50 => divisorReg[14].CLK
clk50 => divisorReg[15].CLK
clk50 => divisorReg[16].CLK
clk50 => divisorReg[17].CLK
clk50 => divisorReg[18].CLK
clk50 => divisorReg[19].CLK
clk50 => divisorReg[20].CLK
clk50 => divisorReg[21].CLK
clk50 => divisorReg[22].CLK
clk50 => divisorReg[23].CLK
clk50 => dividendReg[0].CLK
clk50 => dividendReg[1].CLK
clk50 => dividendReg[2].CLK
clk50 => dividendReg[3].CLK
clk50 => dividendReg[4].CLK
clk50 => dividendReg[5].CLK
clk50 => dividendReg[6].CLK
clk50 => dividendReg[7].CLK
clk50 => dividendReg[8].CLK
clk50 => dividendReg[9].CLK
clk50 => dividendReg[10].CLK
clk50 => dividendReg[11].CLK
clk50 => dividendReg[12].CLK
clk50 => dividendReg[13].CLK
clk50 => dividendReg[14].CLK
clk50 => dividendReg[15].CLK
clk50 => dividendReg[16].CLK
clk50 => dividendReg[17].CLK
clk50 => dividendReg[18].CLK
clk50 => dividendReg[19].CLK
clk50 => dividendReg[20].CLK
clk50 => dividendReg[21].CLK
clk50 => dividendReg[22].CLK
clk50 => dividendReg[23].CLK
reset => quotientReg[0].ACLR
reset => quotientReg[1].ACLR
reset => quotientReg[2].ACLR
reset => quotientReg[3].ACLR
reset => quotientReg[4].ACLR
reset => quotientReg[5].ACLR
reset => quotientReg[6].ACLR
reset => quotientReg[7].ACLR
reset => quotientReg[8].ACLR
reset => quotientReg[9].ACLR
reset => quotientReg[10].ACLR
reset => quotientReg[11].ACLR
reset => quotientReg[12].ACLR
reset => quotientReg[13].ACLR
reset => quotientReg[14].ACLR
reset => quotientReg[15].ACLR
reset => quotientReg[16].ACLR
reset => quotientReg[17].ACLR
reset => quotientReg[18].ACLR
reset => quotientReg[19].ACLR
reset => quotientReg[20].ACLR
reset => quotientReg[21].ACLR
reset => quotientReg[22].ACLR
reset => quotientReg[23].ACLR
reset => quotientReg[24].ACLR
reset => quotientReg[25].ACLR
reset => quotientReg[26].ACLR
reset => quotientReg[27].ACLR
reset => quotientReg[28].ACLR
reset => quotientReg[29].ACLR
reset => quotientReg[30].ACLR
reset => quotientReg[31].ACLR
reset => qStream[0].ACLR
reset => qStream[1].ACLR
reset => qStream[2].ACLR
reset => qStream[3].ACLR
reset => qStream[4].ACLR
reset => qStream[5].ACLR
reset => qStream[6].ACLR
reset => qStream[7].ACLR
reset => qStream[8].ACLR
reset => qStream[9].ACLR
reset => qStream[10].ACLR
reset => qStream[11].ACLR
reset => qStream[12].ACLR
reset => qStream[13].ACLR
reset => qStream[14].ACLR
reset => qStream[15].ACLR
reset => qStream[16].ACLR
reset => qStream[17].ACLR
reset => qStream[18].ACLR
reset => qStream[19].ACLR
reset => qStream[20].ACLR
reset => qStream[21].ACLR
reset => qStream[22].ACLR
reset => exponentDividend[0].ACLR
reset => exponentDividend[1].ACLR
reset => exponentDividend[2].ACLR
reset => exponentDividend[3].ACLR
reset => exponentDividend[4].ACLR
reset => exponentDividend[5].ACLR
reset => exponentDividend[6].ACLR
reset => exponentDividend[7].ACLR
reset => exponentDivisor[0].ACLR
reset => exponentDivisor[1].ACLR
reset => exponentDivisor[2].ACLR
reset => exponentDivisor[3].ACLR
reset => exponentDivisor[4].ACLR
reset => exponentDivisor[5].ACLR
reset => exponentDivisor[6].ACLR
reset => exponentDivisor[7].ACLR
reset => shiftReg[0].ACLR
reset => shiftReg[1].ACLR
reset => shiftReg[2].ACLR
reset => shiftReg[3].ACLR
reset => shiftReg[4].ACLR
reset => shiftReg[5].ACLR
reset => shiftReg[6].ACLR
reset => shiftReg[7].ACLR
reset => shiftReg[8].ACLR
reset => shiftReg[9].ACLR
reset => shiftReg[10].ACLR
reset => shiftReg[11].ACLR
reset => shiftReg[12].ACLR
reset => shiftReg[13].ACLR
reset => shiftReg[14].ACLR
reset => shiftReg[15].ACLR
reset => shiftReg[16].ACLR
reset => shiftReg[17].ACLR
reset => shiftReg[18].ACLR
reset => shiftReg[19].ACLR
reset => shiftReg[20].ACLR
reset => shiftReg[21].ACLR
reset => shiftReg[22].ACLR
reset => shiftReg[23].ACLR
reset => divisorReg[0].ACLR
reset => divisorReg[1].ACLR
reset => divisorReg[2].ACLR
reset => divisorReg[3].ACLR
reset => divisorReg[4].ACLR
reset => divisorReg[5].ACLR
reset => divisorReg[6].ACLR
reset => divisorReg[7].ACLR
reset => divisorReg[8].ACLR
reset => divisorReg[9].ACLR
reset => divisorReg[10].ACLR
reset => divisorReg[11].ACLR
reset => divisorReg[12].ACLR
reset => divisorReg[13].ACLR
reset => divisorReg[14].ACLR
reset => divisorReg[15].ACLR
reset => divisorReg[16].ACLR
reset => divisorReg[17].ACLR
reset => divisorReg[18].ACLR
reset => divisorReg[19].ACLR
reset => divisorReg[20].ACLR
reset => divisorReg[21].ACLR
reset => divisorReg[22].ACLR
reset => divisorReg[23].ACLR
reset => dividendReg[0].ACLR
reset => dividendReg[1].ACLR
reset => dividendReg[2].ACLR
reset => dividendReg[3].ACLR
reset => dividendReg[4].ACLR
reset => dividendReg[5].ACLR
reset => dividendReg[6].ACLR
reset => dividendReg[7].ACLR
reset => dividendReg[8].ACLR
reset => dividendReg[9].ACLR
reset => dividendReg[10].ACLR
reset => dividendReg[11].ACLR
reset => dividendReg[12].ACLR
reset => dividendReg[13].ACLR
reset => dividendReg[14].ACLR
reset => dividendReg[15].ACLR
reset => dividendReg[16].ACLR
reset => dividendReg[17].ACLR
reset => dividendReg[18].ACLR
reset => dividendReg[19].ACLR
reset => dividendReg[20].ACLR
reset => dividendReg[21].ACLR
reset => dividendReg[22].ACLR
reset => dividendReg[23].ACLR
reset => iReg[0].ACLR
reset => iReg[1].ACLR
reset => iReg[2].ACLR
reset => iReg[3].ACLR
reset => iReg[4].ACLR
reset => iReg[5].ACLR
reset => iReg[6].ACLR
reset => State~3.DATAIN
reset => quotient[0]~reg0.ENA
reset => decimalSpot[4].ENA
reset => decimalSpot[3].ENA
reset => decimalSpot[2].ENA
reset => decimalSpot[1].ENA
reset => decimalSpot[0].ENA
reset => bias.ENA
reset => quotient[31]~reg0.ENA
reset => quotient[30]~reg0.ENA
reset => quotient[29]~reg0.ENA
reset => quotient[28]~reg0.ENA
reset => quotient[27]~reg0.ENA
reset => quotient[26]~reg0.ENA
reset => quotient[25]~reg0.ENA
reset => quotient[24]~reg0.ENA
reset => quotient[23]~reg0.ENA
reset => quotient[22]~reg0.ENA
reset => quotient[21]~reg0.ENA
reset => quotient[20]~reg0.ENA
reset => quotient[19]~reg0.ENA
reset => quotient[18]~reg0.ENA
reset => quotient[17]~reg0.ENA
reset => quotient[16]~reg0.ENA
reset => quotient[15]~reg0.ENA
reset => quotient[14]~reg0.ENA
reset => quotient[13]~reg0.ENA
reset => quotient[12]~reg0.ENA
reset => quotient[11]~reg0.ENA
reset => quotient[10]~reg0.ENA
reset => quotient[9]~reg0.ENA
reset => quotient[8]~reg0.ENA
reset => quotient[7]~reg0.ENA
reset => quotient[6]~reg0.ENA
reset => quotient[5]~reg0.ENA
reset => quotient[4]~reg0.ENA
reset => quotient[3]~reg0.ENA
reset => quotient[2]~reg0.ENA
reset => quotient[1]~reg0.ENA
start => next_State.CheckZero.DATAB
start => Selector3.IN4
start => Selector0.IN2
start => Selector0.IN3
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.IN0
divisor[0] => division_encoder.DATAB
divisor[0] => division_encoder.DATAB
divisor[1] => division_encoder.DATAB
divisor[1] => division_encoder.DATAA
divisor[1] => division_encoder.IN1
divisor[2] => division_encoder.DATAB
divisor[2] => division_encoder.DATAA
divisor[2] => division_encoder.DATAA
divisor[2] => division_encoder.IN1
divisor[3] => division_encoder.DATAB
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.IN1
divisor[4] => division_encoder.DATAB
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.IN1
divisor[5] => division_encoder.DATAB
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.IN1
divisor[6] => division_encoder.DATAB
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.IN1
divisor[7] => division_encoder.DATAB
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.IN1
divisor[8] => division_encoder.DATAB
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.IN1
divisor[9] => division_encoder.DATAB
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.IN1
divisor[10] => division_encoder.DATAB
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.IN1
divisor[11] => division_encoder.DATAB
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.IN1
divisor[12] => division_encoder.DATAB
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.IN1
divisor[13] => division_encoder.DATAB
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.IN1
divisor[14] => division_encoder.DATAB
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.IN1
divisor[15] => division_encoder.DATAB
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.IN1
divisor[16] => division_encoder.DATAB
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.IN1
divisor[17] => division_encoder.DATAB
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.IN1
divisor[18] => division_encoder.DATAB
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.IN1
divisor[19] => division_encoder.DATAB
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.IN1
divisor[20] => division_encoder.DATAB
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.IN1
divisor[21] => division_encoder.DATAB
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.IN1
divisor[22] => division_encoder.DATAB
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.IN1
divisor[23] => exponentDivisor[0].DATAIN
divisor[24] => exponentDivisor[1].DATAIN
divisor[25] => exponentDivisor[2].DATAIN
divisor[26] => exponentDivisor[3].DATAIN
divisor[27] => exponentDivisor[4].DATAIN
divisor[28] => exponentDivisor[5].DATAIN
divisor[29] => exponentDivisor[6].DATAIN
divisor[30] => exponentDivisor[7].DATAIN
divisor[31] => ~NO_FANOUT~
dividend[0] => dividendReg[0].DATAIN
dividend[1] => dividendReg[1].DATAIN
dividend[2] => dividendReg[2].DATAIN
dividend[3] => dividendReg[3].DATAIN
dividend[4] => dividendReg[4].DATAIN
dividend[5] => dividendReg[5].DATAIN
dividend[6] => dividendReg[6].DATAIN
dividend[7] => dividendReg[7].DATAIN
dividend[8] => dividendReg[8].DATAIN
dividend[9] => dividendReg[9].DATAIN
dividend[10] => dividendReg[10].DATAIN
dividend[11] => dividendReg[11].DATAIN
dividend[12] => dividendReg[12].DATAIN
dividend[13] => dividendReg[13].DATAIN
dividend[14] => dividendReg[14].DATAIN
dividend[15] => dividendReg[15].DATAIN
dividend[16] => dividendReg[16].DATAIN
dividend[17] => dividendReg[17].DATAIN
dividend[18] => dividendReg[18].DATAIN
dividend[19] => dividendReg[19].DATAIN
dividend[20] => dividendReg[20].DATAIN
dividend[21] => dividendReg[21].DATAIN
dividend[22] => dividendReg[22].DATAIN
dividend[23] => exponentDividend[0].DATAIN
dividend[24] => exponentDividend[1].DATAIN
dividend[25] => exponentDividend[2].DATAIN
dividend[26] => exponentDividend[3].DATAIN
dividend[27] => exponentDividend[4].DATAIN
dividend[28] => exponentDividend[5].DATAIN
dividend[29] => exponentDividend[6].DATAIN
dividend[30] => exponentDividend[7].DATAIN
dividend[31] => ~NO_FANOUT~
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[8] <= quotient[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[9] <= quotient[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[10] <= quotient[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[11] <= quotient[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[12] <= quotient[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[13] <= quotient[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[14] <= quotient[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[15] <= quotient[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[16] <= quotient[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[17] <= quotient[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[18] <= quotient[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[19] <= quotient[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[20] <= quotient[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[21] <= quotient[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[22] <= quotient[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[23] <= quotient[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[24] <= quotient[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[25] <= quotient[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[26] <= quotient[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[27] <= quotient[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[28] <= quotient[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[29] <= quotient[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[30] <= quotient[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[31] <= quotient[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
finished <= finished.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst3|fp_multiplication:mult
multiplicand[0] => Add1.IN46
multiplicand[0] => Add0.IN46
multiplicand[1] => Add1.IN45
multiplicand[1] => Add0.IN45
multiplicand[2] => Add1.IN44
multiplicand[2] => Add0.IN44
multiplicand[3] => Add1.IN43
multiplicand[3] => Add0.IN43
multiplicand[4] => Add1.IN42
multiplicand[4] => Add0.IN42
multiplicand[5] => Add1.IN41
multiplicand[5] => Add0.IN41
multiplicand[6] => Add1.IN40
multiplicand[6] => Add0.IN40
multiplicand[7] => Add1.IN39
multiplicand[7] => Add0.IN39
multiplicand[8] => Add1.IN38
multiplicand[8] => Add0.IN38
multiplicand[9] => Add1.IN37
multiplicand[9] => Add0.IN37
multiplicand[10] => Add1.IN36
multiplicand[10] => Add0.IN36
multiplicand[11] => Add1.IN35
multiplicand[11] => Add0.IN35
multiplicand[12] => Add1.IN34
multiplicand[12] => Add0.IN34
multiplicand[13] => Add1.IN33
multiplicand[13] => Add0.IN33
multiplicand[14] => Add1.IN32
multiplicand[14] => Add0.IN32
multiplicand[15] => Add1.IN31
multiplicand[15] => Add0.IN31
multiplicand[16] => Add1.IN30
multiplicand[16] => Add0.IN30
multiplicand[17] => Add1.IN29
multiplicand[17] => Add0.IN29
multiplicand[18] => Add1.IN28
multiplicand[18] => Add0.IN28
multiplicand[19] => Add1.IN27
multiplicand[19] => Add0.IN27
multiplicand[20] => Add1.IN26
multiplicand[20] => Add0.IN26
multiplicand[21] => Add1.IN25
multiplicand[21] => Add0.IN25
multiplicand[22] => Add1.IN24
multiplicand[22] => Add0.IN24
multiplicand[23] => Add2.IN16
multiplicand[23] => product.DATAB
multiplicand[23] => Equal0.IN7
multiplicand[24] => Add2.IN15
multiplicand[24] => product.DATAB
multiplicand[24] => Equal0.IN6
multiplicand[25] => Add2.IN14
multiplicand[25] => product.DATAB
multiplicand[25] => Equal0.IN5
multiplicand[26] => Add2.IN13
multiplicand[26] => Add3.IN10
multiplicand[26] => Equal0.IN4
multiplicand[27] => Add2.IN12
multiplicand[27] => Add3.IN9
multiplicand[27] => Equal0.IN3
multiplicand[28] => Add2.IN11
multiplicand[28] => Add3.IN8
multiplicand[28] => Equal0.IN2
multiplicand[29] => Add2.IN10
multiplicand[29] => Add3.IN7
multiplicand[29] => Equal0.IN1
multiplicand[30] => Add2.IN9
multiplicand[30] => Add3.IN6
multiplicand[30] => Equal0.IN0
multiplicand[31] => product[31].DATAIN
product[0] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[1] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[2] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[3] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[4] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[5] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[6] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[7] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[8] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[9] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[10] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[11] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[12] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[13] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[14] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[15] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[16] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[17] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[18] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[19] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[20] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[21] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[22] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[23] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[24] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[25] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[26] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[27] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[28] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[29] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[30] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[31] <= multiplicand[31].DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst3|fp_to_binary:fp2b
inputFP[0] => ~NO_FANOUT~
inputFP[1] => ~NO_FANOUT~
inputFP[2] => ~NO_FANOUT~
inputFP[3] => ~NO_FANOUT~
inputFP[4] => ~NO_FANOUT~
inputFP[5] => ~NO_FANOUT~
inputFP[6] => ~NO_FANOUT~
inputFP[7] => ~NO_FANOUT~
inputFP[8] => ~NO_FANOUT~
inputFP[9] => ~NO_FANOUT~
inputFP[10] => ~NO_FANOUT~
inputFP[11] => ~NO_FANOUT~
inputFP[12] => ~NO_FANOUT~
inputFP[13] => ~NO_FANOUT~
inputFP[14] => ~NO_FANOUT~
inputFP[15] => ~NO_FANOUT~
inputFP[16] => to_decimal.DATAB
inputFP[17] => to_decimal.DATAB
inputFP[17] => to_decimal.DATAA
inputFP[18] => to_decimal.DATAB
inputFP[18] => to_decimal.DATAA
inputFP[18] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAB
inputFP[19] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAB
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAB
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAB
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[23] => LessThan0.IN16
inputFP[23] => LessThan1.IN16
inputFP[23] => Add0.IN16
inputFP[23] => Equal8.IN7
inputFP[24] => LessThan0.IN15
inputFP[24] => LessThan1.IN15
inputFP[24] => Add0.IN15
inputFP[24] => Equal8.IN6
inputFP[25] => LessThan0.IN14
inputFP[25] => LessThan1.IN14
inputFP[25] => Add0.IN14
inputFP[25] => Equal8.IN5
inputFP[26] => LessThan0.IN13
inputFP[26] => LessThan1.IN13
inputFP[26] => Add0.IN13
inputFP[26] => Equal8.IN4
inputFP[27] => LessThan0.IN12
inputFP[27] => LessThan1.IN12
inputFP[27] => Add0.IN12
inputFP[27] => Equal8.IN3
inputFP[28] => LessThan0.IN11
inputFP[28] => LessThan1.IN11
inputFP[28] => Add0.IN11
inputFP[28] => Equal8.IN2
inputFP[29] => LessThan0.IN10
inputFP[29] => LessThan1.IN10
inputFP[29] => Add0.IN10
inputFP[29] => Equal8.IN1
inputFP[30] => LessThan0.IN9
inputFP[30] => LessThan1.IN9
inputFP[30] => Add0.IN9
inputFP[30] => Equal8.IN0
inputFP[31] => ~NO_FANOUT~
output[0] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst6
clk50 => fp_division:div.clk50
clk50 => multiplicand[0].CLK
clk50 => multiplicand[1].CLK
clk50 => multiplicand[2].CLK
clk50 => multiplicand[3].CLK
clk50 => multiplicand[4].CLK
clk50 => multiplicand[5].CLK
clk50 => multiplicand[6].CLK
clk50 => multiplicand[7].CLK
clk50 => multiplicand[8].CLK
clk50 => multiplicand[9].CLK
clk50 => multiplicand[10].CLK
clk50 => multiplicand[11].CLK
clk50 => multiplicand[12].CLK
clk50 => multiplicand[13].CLK
clk50 => multiplicand[14].CLK
clk50 => multiplicand[15].CLK
clk50 => multiplicand[16].CLK
clk50 => multiplicand[17].CLK
clk50 => multiplicand[18].CLK
clk50 => multiplicand[19].CLK
clk50 => multiplicand[20].CLK
clk50 => multiplicand[21].CLK
clk50 => multiplicand[22].CLK
clk50 => multiplicand[23].CLK
clk50 => multiplicand[24].CLK
clk50 => multiplicand[25].CLK
clk50 => multiplicand[26].CLK
clk50 => multiplicand[27].CLK
clk50 => multiplicand[28].CLK
clk50 => multiplicand[29].CLK
clk50 => multiplicand[30].CLK
clk50 => multiplicand[31].CLK
clk50 => iReg[0].CLK
clk50 => iReg[1].CLK
clk50 => iReg[2].CLK
clk50 => state~1.DATAIN
clk50 => inputNumber[1][0].CLK
clk50 => inputNumber[1][1].CLK
clk50 => inputNumber[1][2].CLK
clk50 => inputNumber[1][3].CLK
clk50 => inputNumber[1][4].CLK
clk50 => inputNumber[1][5].CLK
clk50 => inputNumber[1][6].CLK
clk50 => inputNumber[1][7].CLK
clk50 => inputNumber[2][0].CLK
clk50 => inputNumber[2][1].CLK
clk50 => inputNumber[2][2].CLK
clk50 => inputNumber[2][3].CLK
clk50 => inputNumber[2][4].CLK
clk50 => inputNumber[2][5].CLK
clk50 => inputNumber[2][6].CLK
clk50 => inputNumber[2][7].CLK
clk50 => inputNumber[3][0].CLK
clk50 => inputNumber[3][1].CLK
clk50 => inputNumber[3][2].CLK
clk50 => inputNumber[3][3].CLK
clk50 => inputNumber[3][4].CLK
clk50 => inputNumber[3][5].CLK
clk50 => inputNumber[3][6].CLK
clk50 => inputNumber[3][7].CLK
clk50 => inputNumber[4][0].CLK
clk50 => inputNumber[4][1].CLK
clk50 => inputNumber[4][2].CLK
clk50 => inputNumber[4][3].CLK
clk50 => inputNumber[4][4].CLK
clk50 => inputNumber[4][5].CLK
clk50 => inputNumber[4][6].CLK
clk50 => inputNumber[4][7].CLK
clk50 => ffAccept[0].CLK
clk50 => ffAccept[1].CLK
clk50 => ffAllow[0].CLK
clk50 => ffAllow[1].CLK
accept => Selector5.IN3
accept => ffAccept[0].DATAIN
accept => Selector3.IN3
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[0] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[1] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[2] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[3] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[4] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[5] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[6] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
input[7] => inputNumber.DATAB
output[0] <= fp_to_binary:fp2b.output[0]
output[1] <= fp_to_binary:fp2b.output[1]
output[2] <= fp_to_binary:fp2b.output[2]
output[3] <= fp_to_binary:fp2b.output[3]
output[4] <= fp_to_binary:fp2b.output[4]
output[5] <= fp_to_binary:fp2b.output[5]
output[6] <= fp_to_binary:fp2b.output[6]
output[7] <= fp_to_binary:fp2b.output[7]


|schematic|colorBox:inst6|binary_to_fp:b2f0
inputInteger[0] => exponent_encoder.IN1
inputInteger[0] => significand_generator:sgn.inputInteger[0]
inputInteger[0] => Equal0.IN15
inputInteger[1] => exponent_encoder.IN1
inputInteger[1] => significand_generator:sgn.inputInteger[1]
inputInteger[1] => Equal0.IN14
inputInteger[2] => exponent_encoder.IN1
inputInteger[2] => significand_generator:sgn.inputInteger[2]
inputInteger[2] => Equal0.IN13
inputInteger[3] => exponent_encoder.IN1
inputInteger[3] => significand_generator:sgn.inputInteger[3]
inputInteger[3] => Equal0.IN12
inputInteger[4] => exponent_encoder.IN1
inputInteger[4] => significand_generator:sgn.inputInteger[4]
inputInteger[4] => Equal0.IN11
inputInteger[5] => exponent_encoder.IN1
inputInteger[5] => significand_generator:sgn.inputInteger[5]
inputInteger[5] => Equal0.IN10
inputInteger[6] => exponent_encoder.IN1
inputInteger[6] => significand_generator:sgn.inputInteger[6]
inputInteger[6] => Equal0.IN9
inputInteger[7] => exponent_encoder.IN1
inputInteger[7] => significand_generator:sgn.inputInteger[7]
inputInteger[7] => Equal0.IN8
inputInteger[8] => exponent_encoder.IN1
inputInteger[8] => significand_generator:sgn.inputInteger[8]
inputInteger[8] => Equal0.IN7
inputInteger[9] => exponent_encoder.IN1
inputInteger[9] => significand_generator:sgn.inputInteger[9]
inputInteger[9] => Equal0.IN6
inputInteger[10] => exponent_encoder.IN1
inputInteger[10] => significand_generator:sgn.inputInteger[10]
inputInteger[10] => Equal0.IN5
inputInteger[11] => exponent_encoder.IN1
inputInteger[11] => significand_generator:sgn.inputInteger[11]
inputInteger[11] => Equal0.IN4
inputInteger[12] => exponent_encoder.IN1
inputInteger[12] => significand_generator:sgn.inputInteger[12]
inputInteger[12] => Equal0.IN3
inputInteger[13] => exponent_encoder.IN1
inputInteger[13] => significand_generator:sgn.inputInteger[13]
inputInteger[13] => Equal0.IN2
inputInteger[14] => exponent_encoder.IN0
inputInteger[14] => significand_generator:sgn.inputInteger[14]
inputInteger[14] => Equal0.IN1
inputInteger[15] => exponent_encoder.IN1
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => significand_generator:sgn.inputInteger[15]
inputInteger[15] => Equal0.IN0
inputInteger[15] => exponent_encoder.DATAB
output[0] <= significand_generator:sgn.significand[0]
output[1] <= significand_generator:sgn.significand[1]
output[2] <= significand_generator:sgn.significand[2]
output[3] <= significand_generator:sgn.significand[3]
output[4] <= significand_generator:sgn.significand[4]
output[5] <= significand_generator:sgn.significand[5]
output[6] <= significand_generator:sgn.significand[6]
output[7] <= significand_generator:sgn.significand[7]
output[8] <= significand_generator:sgn.significand[8]
output[9] <= significand_generator:sgn.significand[9]
output[10] <= significand_generator:sgn.significand[10]
output[11] <= significand_generator:sgn.significand[11]
output[12] <= significand_generator:sgn.significand[12]
output[13] <= significand_generator:sgn.significand[13]
output[14] <= significand_generator:sgn.significand[14]
output[15] <= significand_generator:sgn.significand[15]
output[16] <= significand_generator:sgn.significand[16]
output[17] <= significand_generator:sgn.significand[17]
output[18] <= significand_generator:sgn.significand[18]
output[19] <= significand_generator:sgn.significand[19]
output[20] <= significand_generator:sgn.significand[20]
output[21] <= significand_generator:sgn.significand[21]
output[22] <= significand_generator:sgn.significand[22]
output[23] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[24] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[25] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[26] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[27] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[28] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[29] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[30] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[31] <= <GND>


|schematic|colorBox:inst6|binary_to_fp:b2f0|significand_generator:sgn
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAB
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => Equal0.IN15
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAB
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => Equal0.IN14
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAB
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => Equal0.IN13
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAB
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => Equal0.IN12
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAB
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => Equal0.IN11
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAB
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => Equal0.IN10
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAB
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => Equal0.IN9
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAB
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => Equal0.IN8
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAB
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => Equal0.IN7
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAB
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => Equal0.IN6
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAB
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => Equal0.IN5
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAB
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAA
inputInteger[11] => Equal0.IN4
inputInteger[12] => process_0.DATAA
inputInteger[12] => process_0.DATAB
inputInteger[12] => process_0.DATAA
inputInteger[12] => Equal0.IN3
inputInteger[13] => process_0.DATAA
inputInteger[13] => process_0.DATAB
inputInteger[13] => Equal0.IN2
inputInteger[14] => process_0.DATAB
inputInteger[14] => Equal0.IN1
inputInteger[15] => Equal0.IN0
index[0] => Equal2.IN7
index[0] => Equal3.IN7
index[0] => Equal4.IN7
index[0] => Equal5.IN7
index[0] => Equal6.IN7
index[0] => Equal7.IN7
index[0] => Equal8.IN7
index[0] => Equal9.IN7
index[0] => Equal10.IN7
index[0] => Equal11.IN7
index[0] => Equal12.IN7
index[0] => Equal13.IN7
index[0] => Equal14.IN7
index[0] => Equal15.IN7
index[0] => Equal16.IN7
index[0] => Equal1.IN3
index[1] => Equal2.IN6
index[1] => Equal3.IN6
index[1] => Equal4.IN6
index[1] => Equal5.IN6
index[1] => Equal6.IN6
index[1] => Equal7.IN6
index[1] => Equal8.IN6
index[1] => Equal9.IN6
index[1] => Equal10.IN6
index[1] => Equal11.IN6
index[1] => Equal12.IN6
index[1] => Equal13.IN6
index[1] => Equal14.IN6
index[1] => Equal15.IN6
index[1] => Equal16.IN6
index[1] => Equal1.IN2
index[2] => Equal2.IN5
index[2] => Equal3.IN5
index[2] => Equal4.IN5
index[2] => Equal5.IN5
index[2] => Equal6.IN5
index[2] => Equal7.IN5
index[2] => Equal8.IN5
index[2] => Equal9.IN5
index[2] => Equal10.IN5
index[2] => Equal11.IN5
index[2] => Equal12.IN5
index[2] => Equal13.IN5
index[2] => Equal14.IN5
index[2] => Equal15.IN5
index[2] => Equal16.IN5
index[2] => Equal1.IN1
index[3] => Equal2.IN4
index[3] => Equal3.IN4
index[3] => Equal4.IN4
index[3] => Equal5.IN4
index[3] => Equal6.IN4
index[3] => Equal7.IN4
index[3] => Equal8.IN4
index[3] => Equal9.IN4
index[3] => Equal10.IN4
index[3] => Equal11.IN4
index[3] => Equal12.IN4
index[3] => Equal13.IN4
index[3] => Equal14.IN4
index[3] => Equal15.IN4
index[3] => Equal16.IN4
index[3] => Equal1.IN0
significand[0] <= <GND>
significand[1] <= <GND>
significand[2] <= <GND>
significand[3] <= <GND>
significand[4] <= <GND>
significand[5] <= <GND>
significand[6] <= <GND>
significand[7] <= <GND>
significand[8] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[9] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[10] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[11] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[12] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[13] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[14] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[15] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[16] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[17] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[18] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[19] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[20] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[21] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[22] <= significand.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst6|binary_to_fp:b2f1
inputInteger[0] => exponent_encoder.IN1
inputInteger[0] => significand_generator:sgn.inputInteger[0]
inputInteger[0] => Equal0.IN15
inputInteger[1] => exponent_encoder.IN1
inputInteger[1] => significand_generator:sgn.inputInteger[1]
inputInteger[1] => Equal0.IN14
inputInteger[2] => exponent_encoder.IN1
inputInteger[2] => significand_generator:sgn.inputInteger[2]
inputInteger[2] => Equal0.IN13
inputInteger[3] => exponent_encoder.IN1
inputInteger[3] => significand_generator:sgn.inputInteger[3]
inputInteger[3] => Equal0.IN12
inputInteger[4] => exponent_encoder.IN1
inputInteger[4] => significand_generator:sgn.inputInteger[4]
inputInteger[4] => Equal0.IN11
inputInteger[5] => exponent_encoder.IN1
inputInteger[5] => significand_generator:sgn.inputInteger[5]
inputInteger[5] => Equal0.IN10
inputInteger[6] => exponent_encoder.IN1
inputInteger[6] => significand_generator:sgn.inputInteger[6]
inputInteger[6] => Equal0.IN9
inputInteger[7] => exponent_encoder.IN1
inputInteger[7] => significand_generator:sgn.inputInteger[7]
inputInteger[7] => Equal0.IN8
inputInteger[8] => exponent_encoder.IN1
inputInteger[8] => significand_generator:sgn.inputInteger[8]
inputInteger[8] => Equal0.IN7
inputInteger[9] => exponent_encoder.IN1
inputInteger[9] => significand_generator:sgn.inputInteger[9]
inputInteger[9] => Equal0.IN6
inputInteger[10] => exponent_encoder.IN1
inputInteger[10] => significand_generator:sgn.inputInteger[10]
inputInteger[10] => Equal0.IN5
inputInteger[11] => exponent_encoder.IN1
inputInteger[11] => significand_generator:sgn.inputInteger[11]
inputInteger[11] => Equal0.IN4
inputInteger[12] => exponent_encoder.IN1
inputInteger[12] => significand_generator:sgn.inputInteger[12]
inputInteger[12] => Equal0.IN3
inputInteger[13] => exponent_encoder.IN1
inputInteger[13] => significand_generator:sgn.inputInteger[13]
inputInteger[13] => Equal0.IN2
inputInteger[14] => exponent_encoder.IN0
inputInteger[14] => significand_generator:sgn.inputInteger[14]
inputInteger[14] => Equal0.IN1
inputInteger[15] => exponent_encoder.IN1
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => exponent_encoder.DATAB
inputInteger[15] => significand_generator:sgn.inputInteger[15]
inputInteger[15] => Equal0.IN0
inputInteger[15] => exponent_encoder.DATAB
output[0] <= significand_generator:sgn.significand[0]
output[1] <= significand_generator:sgn.significand[1]
output[2] <= significand_generator:sgn.significand[2]
output[3] <= significand_generator:sgn.significand[3]
output[4] <= significand_generator:sgn.significand[4]
output[5] <= significand_generator:sgn.significand[5]
output[6] <= significand_generator:sgn.significand[6]
output[7] <= significand_generator:sgn.significand[7]
output[8] <= significand_generator:sgn.significand[8]
output[9] <= significand_generator:sgn.significand[9]
output[10] <= significand_generator:sgn.significand[10]
output[11] <= significand_generator:sgn.significand[11]
output[12] <= significand_generator:sgn.significand[12]
output[13] <= significand_generator:sgn.significand[13]
output[14] <= significand_generator:sgn.significand[14]
output[15] <= significand_generator:sgn.significand[15]
output[16] <= significand_generator:sgn.significand[16]
output[17] <= significand_generator:sgn.significand[17]
output[18] <= significand_generator:sgn.significand[18]
output[19] <= significand_generator:sgn.significand[19]
output[20] <= significand_generator:sgn.significand[20]
output[21] <= significand_generator:sgn.significand[21]
output[22] <= significand_generator:sgn.significand[22]
output[23] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[24] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[25] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[26] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[27] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[28] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[29] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[30] <= exponent.DB_MAX_OUTPUT_PORT_TYPE
output[31] <= <GND>


|schematic|colorBox:inst6|binary_to_fp:b2f1|significand_generator:sgn
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAB
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => process_0.DATAA
inputInteger[0] => Equal0.IN15
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAB
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => process_0.DATAA
inputInteger[1] => Equal0.IN14
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAB
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => process_0.DATAA
inputInteger[2] => Equal0.IN13
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAB
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => process_0.DATAA
inputInteger[3] => Equal0.IN12
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAB
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => process_0.DATAA
inputInteger[4] => Equal0.IN11
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAB
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => process_0.DATAA
inputInteger[5] => Equal0.IN10
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAB
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => process_0.DATAA
inputInteger[6] => Equal0.IN9
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAB
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => process_0.DATAA
inputInteger[7] => Equal0.IN8
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAB
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => process_0.DATAA
inputInteger[8] => Equal0.IN7
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAB
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => process_0.DATAA
inputInteger[9] => Equal0.IN6
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAB
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => process_0.DATAA
inputInteger[10] => Equal0.IN5
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAB
inputInteger[11] => process_0.DATAA
inputInteger[11] => process_0.DATAA
inputInteger[11] => Equal0.IN4
inputInteger[12] => process_0.DATAA
inputInteger[12] => process_0.DATAB
inputInteger[12] => process_0.DATAA
inputInteger[12] => Equal0.IN3
inputInteger[13] => process_0.DATAA
inputInteger[13] => process_0.DATAB
inputInteger[13] => Equal0.IN2
inputInteger[14] => process_0.DATAB
inputInteger[14] => Equal0.IN1
inputInteger[15] => Equal0.IN0
index[0] => Equal2.IN7
index[0] => Equal3.IN7
index[0] => Equal4.IN7
index[0] => Equal5.IN7
index[0] => Equal6.IN7
index[0] => Equal7.IN7
index[0] => Equal8.IN7
index[0] => Equal9.IN7
index[0] => Equal10.IN7
index[0] => Equal11.IN7
index[0] => Equal12.IN7
index[0] => Equal13.IN7
index[0] => Equal14.IN7
index[0] => Equal15.IN7
index[0] => Equal16.IN7
index[0] => Equal1.IN3
index[1] => Equal2.IN6
index[1] => Equal3.IN6
index[1] => Equal4.IN6
index[1] => Equal5.IN6
index[1] => Equal6.IN6
index[1] => Equal7.IN6
index[1] => Equal8.IN6
index[1] => Equal9.IN6
index[1] => Equal10.IN6
index[1] => Equal11.IN6
index[1] => Equal12.IN6
index[1] => Equal13.IN6
index[1] => Equal14.IN6
index[1] => Equal15.IN6
index[1] => Equal16.IN6
index[1] => Equal1.IN2
index[2] => Equal2.IN5
index[2] => Equal3.IN5
index[2] => Equal4.IN5
index[2] => Equal5.IN5
index[2] => Equal6.IN5
index[2] => Equal7.IN5
index[2] => Equal8.IN5
index[2] => Equal9.IN5
index[2] => Equal10.IN5
index[2] => Equal11.IN5
index[2] => Equal12.IN5
index[2] => Equal13.IN5
index[2] => Equal14.IN5
index[2] => Equal15.IN5
index[2] => Equal16.IN5
index[2] => Equal1.IN1
index[3] => Equal2.IN4
index[3] => Equal3.IN4
index[3] => Equal4.IN4
index[3] => Equal5.IN4
index[3] => Equal6.IN4
index[3] => Equal7.IN4
index[3] => Equal8.IN4
index[3] => Equal9.IN4
index[3] => Equal10.IN4
index[3] => Equal11.IN4
index[3] => Equal12.IN4
index[3] => Equal13.IN4
index[3] => Equal14.IN4
index[3] => Equal15.IN4
index[3] => Equal16.IN4
index[3] => Equal1.IN0
significand[0] <= <GND>
significand[1] <= <GND>
significand[2] <= <GND>
significand[3] <= <GND>
significand[4] <= <GND>
significand[5] <= <GND>
significand[6] <= <GND>
significand[7] <= <GND>
significand[8] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[9] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[10] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[11] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[12] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[13] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[14] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[15] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[16] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[17] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[18] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[19] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[20] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[21] <= significand.DB_MAX_OUTPUT_PORT_TYPE
significand[22] <= significand.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst6|fp_division:div
clk50 => iReg[0].CLK
clk50 => iReg[1].CLK
clk50 => iReg[2].CLK
clk50 => iReg[3].CLK
clk50 => iReg[4].CLK
clk50 => iReg[5].CLK
clk50 => iReg[6].CLK
clk50 => State~1.DATAIN
clk50 => quotient[0]~reg0.CLK
clk50 => quotient[1]~reg0.CLK
clk50 => quotient[2]~reg0.CLK
clk50 => quotient[3]~reg0.CLK
clk50 => quotient[4]~reg0.CLK
clk50 => quotient[5]~reg0.CLK
clk50 => quotient[6]~reg0.CLK
clk50 => quotient[7]~reg0.CLK
clk50 => quotient[8]~reg0.CLK
clk50 => quotient[9]~reg0.CLK
clk50 => quotient[10]~reg0.CLK
clk50 => quotient[11]~reg0.CLK
clk50 => quotient[12]~reg0.CLK
clk50 => quotient[13]~reg0.CLK
clk50 => quotient[14]~reg0.CLK
clk50 => quotient[15]~reg0.CLK
clk50 => quotient[16]~reg0.CLK
clk50 => quotient[17]~reg0.CLK
clk50 => quotient[18]~reg0.CLK
clk50 => quotient[19]~reg0.CLK
clk50 => quotient[20]~reg0.CLK
clk50 => quotient[21]~reg0.CLK
clk50 => quotient[22]~reg0.CLK
clk50 => quotient[23]~reg0.CLK
clk50 => quotient[24]~reg0.CLK
clk50 => quotient[25]~reg0.CLK
clk50 => quotient[26]~reg0.CLK
clk50 => quotient[27]~reg0.CLK
clk50 => quotient[28]~reg0.CLK
clk50 => quotient[29]~reg0.CLK
clk50 => quotient[30]~reg0.CLK
clk50 => quotient[31]~reg0.CLK
clk50 => bias.CLK
clk50 => decimalSpot[0].CLK
clk50 => decimalSpot[1].CLK
clk50 => decimalSpot[2].CLK
clk50 => decimalSpot[3].CLK
clk50 => decimalSpot[4].CLK
clk50 => quotientReg[0].CLK
clk50 => quotientReg[1].CLK
clk50 => quotientReg[2].CLK
clk50 => quotientReg[3].CLK
clk50 => quotientReg[4].CLK
clk50 => quotientReg[5].CLK
clk50 => quotientReg[6].CLK
clk50 => quotientReg[7].CLK
clk50 => quotientReg[8].CLK
clk50 => quotientReg[9].CLK
clk50 => quotientReg[10].CLK
clk50 => quotientReg[11].CLK
clk50 => quotientReg[12].CLK
clk50 => quotientReg[13].CLK
clk50 => quotientReg[14].CLK
clk50 => quotientReg[15].CLK
clk50 => quotientReg[16].CLK
clk50 => quotientReg[17].CLK
clk50 => quotientReg[18].CLK
clk50 => quotientReg[19].CLK
clk50 => quotientReg[20].CLK
clk50 => quotientReg[21].CLK
clk50 => quotientReg[22].CLK
clk50 => quotientReg[23].CLK
clk50 => quotientReg[24].CLK
clk50 => quotientReg[25].CLK
clk50 => quotientReg[26].CLK
clk50 => quotientReg[27].CLK
clk50 => quotientReg[28].CLK
clk50 => quotientReg[29].CLK
clk50 => quotientReg[30].CLK
clk50 => quotientReg[31].CLK
clk50 => qStream[0].CLK
clk50 => qStream[1].CLK
clk50 => qStream[2].CLK
clk50 => qStream[3].CLK
clk50 => qStream[4].CLK
clk50 => qStream[5].CLK
clk50 => qStream[6].CLK
clk50 => qStream[7].CLK
clk50 => qStream[8].CLK
clk50 => qStream[9].CLK
clk50 => qStream[10].CLK
clk50 => qStream[11].CLK
clk50 => qStream[12].CLK
clk50 => qStream[13].CLK
clk50 => qStream[14].CLK
clk50 => qStream[15].CLK
clk50 => qStream[16].CLK
clk50 => qStream[17].CLK
clk50 => qStream[18].CLK
clk50 => qStream[19].CLK
clk50 => qStream[20].CLK
clk50 => qStream[21].CLK
clk50 => qStream[22].CLK
clk50 => exponentDividend[0].CLK
clk50 => exponentDividend[1].CLK
clk50 => exponentDividend[2].CLK
clk50 => exponentDividend[3].CLK
clk50 => exponentDividend[4].CLK
clk50 => exponentDividend[5].CLK
clk50 => exponentDividend[6].CLK
clk50 => exponentDividend[7].CLK
clk50 => exponentDivisor[0].CLK
clk50 => exponentDivisor[1].CLK
clk50 => exponentDivisor[2].CLK
clk50 => exponentDivisor[3].CLK
clk50 => exponentDivisor[4].CLK
clk50 => exponentDivisor[5].CLK
clk50 => exponentDivisor[6].CLK
clk50 => exponentDivisor[7].CLK
clk50 => shiftReg[0].CLK
clk50 => shiftReg[1].CLK
clk50 => shiftReg[2].CLK
clk50 => shiftReg[3].CLK
clk50 => shiftReg[4].CLK
clk50 => shiftReg[5].CLK
clk50 => shiftReg[6].CLK
clk50 => shiftReg[7].CLK
clk50 => shiftReg[8].CLK
clk50 => shiftReg[9].CLK
clk50 => shiftReg[10].CLK
clk50 => shiftReg[11].CLK
clk50 => shiftReg[12].CLK
clk50 => shiftReg[13].CLK
clk50 => shiftReg[14].CLK
clk50 => shiftReg[15].CLK
clk50 => shiftReg[16].CLK
clk50 => shiftReg[17].CLK
clk50 => shiftReg[18].CLK
clk50 => shiftReg[19].CLK
clk50 => shiftReg[20].CLK
clk50 => shiftReg[21].CLK
clk50 => shiftReg[22].CLK
clk50 => shiftReg[23].CLK
clk50 => divisorReg[0].CLK
clk50 => divisorReg[1].CLK
clk50 => divisorReg[2].CLK
clk50 => divisorReg[3].CLK
clk50 => divisorReg[4].CLK
clk50 => divisorReg[5].CLK
clk50 => divisorReg[6].CLK
clk50 => divisorReg[7].CLK
clk50 => divisorReg[8].CLK
clk50 => divisorReg[9].CLK
clk50 => divisorReg[10].CLK
clk50 => divisorReg[11].CLK
clk50 => divisorReg[12].CLK
clk50 => divisorReg[13].CLK
clk50 => divisorReg[14].CLK
clk50 => divisorReg[15].CLK
clk50 => divisorReg[16].CLK
clk50 => divisorReg[17].CLK
clk50 => divisorReg[18].CLK
clk50 => divisorReg[19].CLK
clk50 => divisorReg[20].CLK
clk50 => divisorReg[21].CLK
clk50 => divisorReg[22].CLK
clk50 => divisorReg[23].CLK
clk50 => dividendReg[0].CLK
clk50 => dividendReg[1].CLK
clk50 => dividendReg[2].CLK
clk50 => dividendReg[3].CLK
clk50 => dividendReg[4].CLK
clk50 => dividendReg[5].CLK
clk50 => dividendReg[6].CLK
clk50 => dividendReg[7].CLK
clk50 => dividendReg[8].CLK
clk50 => dividendReg[9].CLK
clk50 => dividendReg[10].CLK
clk50 => dividendReg[11].CLK
clk50 => dividendReg[12].CLK
clk50 => dividendReg[13].CLK
clk50 => dividendReg[14].CLK
clk50 => dividendReg[15].CLK
clk50 => dividendReg[16].CLK
clk50 => dividendReg[17].CLK
clk50 => dividendReg[18].CLK
clk50 => dividendReg[19].CLK
clk50 => dividendReg[20].CLK
clk50 => dividendReg[21].CLK
clk50 => dividendReg[22].CLK
clk50 => dividendReg[23].CLK
reset => quotientReg[0].ACLR
reset => quotientReg[1].ACLR
reset => quotientReg[2].ACLR
reset => quotientReg[3].ACLR
reset => quotientReg[4].ACLR
reset => quotientReg[5].ACLR
reset => quotientReg[6].ACLR
reset => quotientReg[7].ACLR
reset => quotientReg[8].ACLR
reset => quotientReg[9].ACLR
reset => quotientReg[10].ACLR
reset => quotientReg[11].ACLR
reset => quotientReg[12].ACLR
reset => quotientReg[13].ACLR
reset => quotientReg[14].ACLR
reset => quotientReg[15].ACLR
reset => quotientReg[16].ACLR
reset => quotientReg[17].ACLR
reset => quotientReg[18].ACLR
reset => quotientReg[19].ACLR
reset => quotientReg[20].ACLR
reset => quotientReg[21].ACLR
reset => quotientReg[22].ACLR
reset => quotientReg[23].ACLR
reset => quotientReg[24].ACLR
reset => quotientReg[25].ACLR
reset => quotientReg[26].ACLR
reset => quotientReg[27].ACLR
reset => quotientReg[28].ACLR
reset => quotientReg[29].ACLR
reset => quotientReg[30].ACLR
reset => quotientReg[31].ACLR
reset => qStream[0].ACLR
reset => qStream[1].ACLR
reset => qStream[2].ACLR
reset => qStream[3].ACLR
reset => qStream[4].ACLR
reset => qStream[5].ACLR
reset => qStream[6].ACLR
reset => qStream[7].ACLR
reset => qStream[8].ACLR
reset => qStream[9].ACLR
reset => qStream[10].ACLR
reset => qStream[11].ACLR
reset => qStream[12].ACLR
reset => qStream[13].ACLR
reset => qStream[14].ACLR
reset => qStream[15].ACLR
reset => qStream[16].ACLR
reset => qStream[17].ACLR
reset => qStream[18].ACLR
reset => qStream[19].ACLR
reset => qStream[20].ACLR
reset => qStream[21].ACLR
reset => qStream[22].ACLR
reset => exponentDividend[0].ACLR
reset => exponentDividend[1].ACLR
reset => exponentDividend[2].ACLR
reset => exponentDividend[3].ACLR
reset => exponentDividend[4].ACLR
reset => exponentDividend[5].ACLR
reset => exponentDividend[6].ACLR
reset => exponentDividend[7].ACLR
reset => exponentDivisor[0].ACLR
reset => exponentDivisor[1].ACLR
reset => exponentDivisor[2].ACLR
reset => exponentDivisor[3].ACLR
reset => exponentDivisor[4].ACLR
reset => exponentDivisor[5].ACLR
reset => exponentDivisor[6].ACLR
reset => exponentDivisor[7].ACLR
reset => shiftReg[0].ACLR
reset => shiftReg[1].ACLR
reset => shiftReg[2].ACLR
reset => shiftReg[3].ACLR
reset => shiftReg[4].ACLR
reset => shiftReg[5].ACLR
reset => shiftReg[6].ACLR
reset => shiftReg[7].ACLR
reset => shiftReg[8].ACLR
reset => shiftReg[9].ACLR
reset => shiftReg[10].ACLR
reset => shiftReg[11].ACLR
reset => shiftReg[12].ACLR
reset => shiftReg[13].ACLR
reset => shiftReg[14].ACLR
reset => shiftReg[15].ACLR
reset => shiftReg[16].ACLR
reset => shiftReg[17].ACLR
reset => shiftReg[18].ACLR
reset => shiftReg[19].ACLR
reset => shiftReg[20].ACLR
reset => shiftReg[21].ACLR
reset => shiftReg[22].ACLR
reset => shiftReg[23].ACLR
reset => divisorReg[0].ACLR
reset => divisorReg[1].ACLR
reset => divisorReg[2].ACLR
reset => divisorReg[3].ACLR
reset => divisorReg[4].ACLR
reset => divisorReg[5].ACLR
reset => divisorReg[6].ACLR
reset => divisorReg[7].ACLR
reset => divisorReg[8].ACLR
reset => divisorReg[9].ACLR
reset => divisorReg[10].ACLR
reset => divisorReg[11].ACLR
reset => divisorReg[12].ACLR
reset => divisorReg[13].ACLR
reset => divisorReg[14].ACLR
reset => divisorReg[15].ACLR
reset => divisorReg[16].ACLR
reset => divisorReg[17].ACLR
reset => divisorReg[18].ACLR
reset => divisorReg[19].ACLR
reset => divisorReg[20].ACLR
reset => divisorReg[21].ACLR
reset => divisorReg[22].ACLR
reset => divisorReg[23].ACLR
reset => dividendReg[0].ACLR
reset => dividendReg[1].ACLR
reset => dividendReg[2].ACLR
reset => dividendReg[3].ACLR
reset => dividendReg[4].ACLR
reset => dividendReg[5].ACLR
reset => dividendReg[6].ACLR
reset => dividendReg[7].ACLR
reset => dividendReg[8].ACLR
reset => dividendReg[9].ACLR
reset => dividendReg[10].ACLR
reset => dividendReg[11].ACLR
reset => dividendReg[12].ACLR
reset => dividendReg[13].ACLR
reset => dividendReg[14].ACLR
reset => dividendReg[15].ACLR
reset => dividendReg[16].ACLR
reset => dividendReg[17].ACLR
reset => dividendReg[18].ACLR
reset => dividendReg[19].ACLR
reset => dividendReg[20].ACLR
reset => dividendReg[21].ACLR
reset => dividendReg[22].ACLR
reset => dividendReg[23].ACLR
reset => iReg[0].ACLR
reset => iReg[1].ACLR
reset => iReg[2].ACLR
reset => iReg[3].ACLR
reset => iReg[4].ACLR
reset => iReg[5].ACLR
reset => iReg[6].ACLR
reset => State~3.DATAIN
reset => quotient[0]~reg0.ENA
reset => decimalSpot[4].ENA
reset => decimalSpot[3].ENA
reset => decimalSpot[2].ENA
reset => decimalSpot[1].ENA
reset => decimalSpot[0].ENA
reset => bias.ENA
reset => quotient[31]~reg0.ENA
reset => quotient[30]~reg0.ENA
reset => quotient[29]~reg0.ENA
reset => quotient[28]~reg0.ENA
reset => quotient[27]~reg0.ENA
reset => quotient[26]~reg0.ENA
reset => quotient[25]~reg0.ENA
reset => quotient[24]~reg0.ENA
reset => quotient[23]~reg0.ENA
reset => quotient[22]~reg0.ENA
reset => quotient[21]~reg0.ENA
reset => quotient[20]~reg0.ENA
reset => quotient[19]~reg0.ENA
reset => quotient[18]~reg0.ENA
reset => quotient[17]~reg0.ENA
reset => quotient[16]~reg0.ENA
reset => quotient[15]~reg0.ENA
reset => quotient[14]~reg0.ENA
reset => quotient[13]~reg0.ENA
reset => quotient[12]~reg0.ENA
reset => quotient[11]~reg0.ENA
reset => quotient[10]~reg0.ENA
reset => quotient[9]~reg0.ENA
reset => quotient[8]~reg0.ENA
reset => quotient[7]~reg0.ENA
reset => quotient[6]~reg0.ENA
reset => quotient[5]~reg0.ENA
reset => quotient[4]~reg0.ENA
reset => quotient[3]~reg0.ENA
reset => quotient[2]~reg0.ENA
reset => quotient[1]~reg0.ENA
start => next_State.CheckZero.DATAB
start => Selector3.IN4
start => Selector0.IN2
start => Selector0.IN3
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.OUTPUTSELECT
divisor[0] => division_encoder.IN0
divisor[0] => division_encoder.DATAB
divisor[0] => division_encoder.DATAB
divisor[1] => division_encoder.DATAB
divisor[1] => division_encoder.DATAA
divisor[1] => division_encoder.IN1
divisor[2] => division_encoder.DATAB
divisor[2] => division_encoder.DATAA
divisor[2] => division_encoder.DATAA
divisor[2] => division_encoder.IN1
divisor[3] => division_encoder.DATAB
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.DATAA
divisor[3] => division_encoder.IN1
divisor[4] => division_encoder.DATAB
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.DATAA
divisor[4] => division_encoder.IN1
divisor[5] => division_encoder.DATAB
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.DATAA
divisor[5] => division_encoder.IN1
divisor[6] => division_encoder.DATAB
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.DATAA
divisor[6] => division_encoder.IN1
divisor[7] => division_encoder.DATAB
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.DATAA
divisor[7] => division_encoder.IN1
divisor[8] => division_encoder.DATAB
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.DATAA
divisor[8] => division_encoder.IN1
divisor[9] => division_encoder.DATAB
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.DATAA
divisor[9] => division_encoder.IN1
divisor[10] => division_encoder.DATAB
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.DATAA
divisor[10] => division_encoder.IN1
divisor[11] => division_encoder.DATAB
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.DATAA
divisor[11] => division_encoder.IN1
divisor[12] => division_encoder.DATAB
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.DATAA
divisor[12] => division_encoder.IN1
divisor[13] => division_encoder.DATAB
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.DATAA
divisor[13] => division_encoder.IN1
divisor[14] => division_encoder.DATAB
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.DATAA
divisor[14] => division_encoder.IN1
divisor[15] => division_encoder.DATAB
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.DATAA
divisor[15] => division_encoder.IN1
divisor[16] => division_encoder.DATAB
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.DATAA
divisor[16] => division_encoder.IN1
divisor[17] => division_encoder.DATAB
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.DATAA
divisor[17] => division_encoder.IN1
divisor[18] => division_encoder.DATAB
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.DATAA
divisor[18] => division_encoder.IN1
divisor[19] => division_encoder.DATAB
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.DATAA
divisor[19] => division_encoder.IN1
divisor[20] => division_encoder.DATAB
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.DATAA
divisor[20] => division_encoder.IN1
divisor[21] => division_encoder.DATAB
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.DATAA
divisor[21] => division_encoder.IN1
divisor[22] => division_encoder.DATAB
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.DATAA
divisor[22] => division_encoder.IN1
divisor[23] => exponentDivisor[0].DATAIN
divisor[24] => exponentDivisor[1].DATAIN
divisor[25] => exponentDivisor[2].DATAIN
divisor[26] => exponentDivisor[3].DATAIN
divisor[27] => exponentDivisor[4].DATAIN
divisor[28] => exponentDivisor[5].DATAIN
divisor[29] => exponentDivisor[6].DATAIN
divisor[30] => exponentDivisor[7].DATAIN
divisor[31] => ~NO_FANOUT~
dividend[0] => dividendReg[0].DATAIN
dividend[1] => dividendReg[1].DATAIN
dividend[2] => dividendReg[2].DATAIN
dividend[3] => dividendReg[3].DATAIN
dividend[4] => dividendReg[4].DATAIN
dividend[5] => dividendReg[5].DATAIN
dividend[6] => dividendReg[6].DATAIN
dividend[7] => dividendReg[7].DATAIN
dividend[8] => dividendReg[8].DATAIN
dividend[9] => dividendReg[9].DATAIN
dividend[10] => dividendReg[10].DATAIN
dividend[11] => dividendReg[11].DATAIN
dividend[12] => dividendReg[12].DATAIN
dividend[13] => dividendReg[13].DATAIN
dividend[14] => dividendReg[14].DATAIN
dividend[15] => dividendReg[15].DATAIN
dividend[16] => dividendReg[16].DATAIN
dividend[17] => dividendReg[17].DATAIN
dividend[18] => dividendReg[18].DATAIN
dividend[19] => dividendReg[19].DATAIN
dividend[20] => dividendReg[20].DATAIN
dividend[21] => dividendReg[21].DATAIN
dividend[22] => dividendReg[22].DATAIN
dividend[23] => exponentDividend[0].DATAIN
dividend[24] => exponentDividend[1].DATAIN
dividend[25] => exponentDividend[2].DATAIN
dividend[26] => exponentDividend[3].DATAIN
dividend[27] => exponentDividend[4].DATAIN
dividend[28] => exponentDividend[5].DATAIN
dividend[29] => exponentDividend[6].DATAIN
dividend[30] => exponentDividend[7].DATAIN
dividend[31] => ~NO_FANOUT~
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[8] <= quotient[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[9] <= quotient[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[10] <= quotient[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[11] <= quotient[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[12] <= quotient[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[13] <= quotient[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[14] <= quotient[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[15] <= quotient[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[16] <= quotient[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[17] <= quotient[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[18] <= quotient[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[19] <= quotient[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[20] <= quotient[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[21] <= quotient[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[22] <= quotient[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[23] <= quotient[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[24] <= quotient[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[25] <= quotient[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[26] <= quotient[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[27] <= quotient[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[28] <= quotient[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[29] <= quotient[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[30] <= quotient[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[31] <= quotient[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
finished <= finished.DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst6|fp_multiplication:mult
multiplicand[0] => Add1.IN46
multiplicand[0] => Add0.IN46
multiplicand[1] => Add1.IN45
multiplicand[1] => Add0.IN45
multiplicand[2] => Add1.IN44
multiplicand[2] => Add0.IN44
multiplicand[3] => Add1.IN43
multiplicand[3] => Add0.IN43
multiplicand[4] => Add1.IN42
multiplicand[4] => Add0.IN42
multiplicand[5] => Add1.IN41
multiplicand[5] => Add0.IN41
multiplicand[6] => Add1.IN40
multiplicand[6] => Add0.IN40
multiplicand[7] => Add1.IN39
multiplicand[7] => Add0.IN39
multiplicand[8] => Add1.IN38
multiplicand[8] => Add0.IN38
multiplicand[9] => Add1.IN37
multiplicand[9] => Add0.IN37
multiplicand[10] => Add1.IN36
multiplicand[10] => Add0.IN36
multiplicand[11] => Add1.IN35
multiplicand[11] => Add0.IN35
multiplicand[12] => Add1.IN34
multiplicand[12] => Add0.IN34
multiplicand[13] => Add1.IN33
multiplicand[13] => Add0.IN33
multiplicand[14] => Add1.IN32
multiplicand[14] => Add0.IN32
multiplicand[15] => Add1.IN31
multiplicand[15] => Add0.IN31
multiplicand[16] => Add1.IN30
multiplicand[16] => Add0.IN30
multiplicand[17] => Add1.IN29
multiplicand[17] => Add0.IN29
multiplicand[18] => Add1.IN28
multiplicand[18] => Add0.IN28
multiplicand[19] => Add1.IN27
multiplicand[19] => Add0.IN27
multiplicand[20] => Add1.IN26
multiplicand[20] => Add0.IN26
multiplicand[21] => Add1.IN25
multiplicand[21] => Add0.IN25
multiplicand[22] => Add1.IN24
multiplicand[22] => Add0.IN24
multiplicand[23] => Add2.IN16
multiplicand[23] => product.DATAB
multiplicand[23] => Equal0.IN7
multiplicand[24] => Add2.IN15
multiplicand[24] => product.DATAB
multiplicand[24] => Equal0.IN6
multiplicand[25] => Add2.IN14
multiplicand[25] => product.DATAB
multiplicand[25] => Equal0.IN5
multiplicand[26] => Add2.IN13
multiplicand[26] => Add3.IN10
multiplicand[26] => Equal0.IN4
multiplicand[27] => Add2.IN12
multiplicand[27] => Add3.IN9
multiplicand[27] => Equal0.IN3
multiplicand[28] => Add2.IN11
multiplicand[28] => Add3.IN8
multiplicand[28] => Equal0.IN2
multiplicand[29] => Add2.IN10
multiplicand[29] => Add3.IN7
multiplicand[29] => Equal0.IN1
multiplicand[30] => Add2.IN9
multiplicand[30] => Add3.IN6
multiplicand[30] => Equal0.IN0
multiplicand[31] => product[31].DATAIN
product[0] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[1] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[2] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[3] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[4] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[5] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[6] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[7] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[8] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[9] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[10] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[11] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[12] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[13] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[14] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[15] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[16] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[17] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[18] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[19] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[20] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[21] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[22] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[23] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[24] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[25] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[26] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[27] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[28] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[29] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[30] <= product.DB_MAX_OUTPUT_PORT_TYPE
product[31] <= multiplicand[31].DB_MAX_OUTPUT_PORT_TYPE


|schematic|colorBox:inst6|fp_to_binary:fp2b
inputFP[0] => ~NO_FANOUT~
inputFP[1] => ~NO_FANOUT~
inputFP[2] => ~NO_FANOUT~
inputFP[3] => ~NO_FANOUT~
inputFP[4] => ~NO_FANOUT~
inputFP[5] => ~NO_FANOUT~
inputFP[6] => ~NO_FANOUT~
inputFP[7] => ~NO_FANOUT~
inputFP[8] => ~NO_FANOUT~
inputFP[9] => ~NO_FANOUT~
inputFP[10] => ~NO_FANOUT~
inputFP[11] => ~NO_FANOUT~
inputFP[12] => ~NO_FANOUT~
inputFP[13] => ~NO_FANOUT~
inputFP[14] => ~NO_FANOUT~
inputFP[15] => ~NO_FANOUT~
inputFP[16] => to_decimal.DATAB
inputFP[17] => to_decimal.DATAB
inputFP[17] => to_decimal.DATAA
inputFP[18] => to_decimal.DATAB
inputFP[18] => to_decimal.DATAA
inputFP[18] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAB
inputFP[19] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAA
inputFP[19] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAB
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[20] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAB
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[21] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAB
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[22] => to_decimal.DATAA
inputFP[23] => LessThan0.IN16
inputFP[23] => LessThan1.IN16
inputFP[23] => Add0.IN16
inputFP[23] => Equal8.IN7
inputFP[24] => LessThan0.IN15
inputFP[24] => LessThan1.IN15
inputFP[24] => Add0.IN15
inputFP[24] => Equal8.IN6
inputFP[25] => LessThan0.IN14
inputFP[25] => LessThan1.IN14
inputFP[25] => Add0.IN14
inputFP[25] => Equal8.IN5
inputFP[26] => LessThan0.IN13
inputFP[26] => LessThan1.IN13
inputFP[26] => Add0.IN13
inputFP[26] => Equal8.IN4
inputFP[27] => LessThan0.IN12
inputFP[27] => LessThan1.IN12
inputFP[27] => Add0.IN12
inputFP[27] => Equal8.IN3
inputFP[28] => LessThan0.IN11
inputFP[28] => LessThan1.IN11
inputFP[28] => Add0.IN11
inputFP[28] => Equal8.IN2
inputFP[29] => LessThan0.IN10
inputFP[29] => LessThan1.IN10
inputFP[29] => Add0.IN10
inputFP[29] => Equal8.IN1
inputFP[30] => LessThan0.IN9
inputFP[30] => LessThan1.IN9
inputFP[30] => Add0.IN9
inputFP[30] => Equal8.IN0
inputFP[31] => ~NO_FANOUT~
output[0] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output.DB_MAX_OUTPUT_PORT_TYPE


